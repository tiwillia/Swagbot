<h1><%= @bot.nick.capitalize %>: Configuration</h1>
<table class="table table-striped">
  <thead>
    <tr>
      <th>Configuration</th>
      <th>Value</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <%= form_tag "/bots/#{@bot.id}/configuration/update" do %>
        <td><%= label_tag :karma_timeout, "Karma timeout", :class => 'control-label' %></td>
        <td><%= text_field_tag :karma_timeout, @bot.bot_config.karma_timeout, :class => 'form-control' %></td>
        <td>This value defines how long a user must wait after changing another user's karma, before changing that user's karma again.<br>  Default: 5 seconds.</td>
    </tr>
    <tr>
        <td><%= label_tag :num_of_karma_ranks, "Number of karma ranks", :class => 'control-label' %></td>
        <td><%= text_field_tag :num_of_karma_ranks, @bot.bot_config.num_of_karma_ranks, :class => 'form-control' %></td>
        <td>Number of ranks that will be displayed when "bot_name, rank" is called.<br>  Default: 5</td> 
    </tr>
    <tr>
        <td><%= label_tag :channels, "Additional Channels", :class => 'control-label' %></td>
        <td><%= text_field_tag :channels, @bot.bot_config.channels.join(","), :class => 'form-control' %></td>
        <td>Comma seperated list of all channels the bot should auto-join.<br>  Default: <%= @bot.channel %></td> 
    </tr>
    <tr>
        <td><%= label_tag :operator_control, "Enable operator control", :class => 'control-label' %></td>
        <td><%= select_tag :operator_control, options_for_select([["True", true],["False", false]], @bot.bot_config.operator_control.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will give accepted users operator status when a user says <code>!op</code> in channel<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :operator_any_user, "Allow any user to become operator", :class => 'control-label' %></td>
        <td><%= select_tag :operator_any_user, options_for_select([["True", true],["False", false]], @bot.bot_config.operator_any_user.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will any user to become operator if operator control is enabled.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :operators, "Allowed Operators", :class => 'control-label' %></td>
        <td><%= text_field_tag :operators, @bot.bot_config.operators.join(","), :class => 'form-control' %></td>
        <td>Comma seperated list of all allowed operators of the channel. This is only used if 'Allow any user to become operator' is set to False.<br>  Default: []</td> 
    </tr>
    <tr>
        <td><%= label_tag :echo_all_definitions, "Report all definitions", :class => 'control-label' %></td>
        <td><%= select_tag :echo_all_definitions, options_for_select([["True", true],["False", false]], @bot.bot_config.echo_all_definitions.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will echo all definitions a word has been given when asked. If set to false, the bot will echo a random definition of a word when asked.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :quit_message, "Quit Message", :class => 'control-label' %></td>
        <td><%= text_area_tag :quit_message, @bot.bot_config.quit_message, rows: 1, :class => 'form-control' %></td>
        <td>This message will be displayed when the bot quits from the irc server or channel.<br>  Default: Leaving...</td> 
    </tr>
    <tr>
        <td><%= label_tag :definitions, "Enable definitions", :class => 'control-label' %></td>
        <td><%= select_tag :definitions, options_for_select([["True", true],["False", false]], @bot.bot_config.definitions.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will be able to accept definitions for words and store them. These can be 'echoed' at any time. Disabling this will not delete and definitions already stored.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :quotes, "Enable quotes", :class => 'control-label' %></td>
        <td><%= select_tag :quotes, options_for_select([["True", true],["False", false]], @bot.bot_config.quotes.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will be able to accept quotes from users and store them. These can be 'echoed' at any time. Disabling this will not delete any quotes already stored.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :karma, "Enable karma", :class => 'control-label' %></td>
        <td><%= select_tag :karma, options_for_select([["True", true],["False", false]], @bot.bot_config.karma.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will be able to accept karma additions and subtractions from users and store them. Disabling this will not delete any karma already stored.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :youtube, "Enable Youtube link parsing", :class => 'control-label' %></td>
        <td><%= select_tag :youtube, options_for_select([["True", true],["False", false]], @bot.bot_config.youtube.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will parse youtube links and present the channel with the title, views, and other information about the video.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :imgur, "Enable Imgur link parsing", :class => 'control-label' %></td>
        <td><%= select_tag :imgur, options_for_select([["True", true],["False", false]], @bot.bot_config.imgur.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will parse imgur links and present the channel with the title, score, and other information about the image.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :bugzilla, "Enable Bugzilla link parsing", :class => 'control-label' %></td>
        <td><%= select_tag :bugzilla, options_for_select([["True", true],["False", false]], @bot.bot_config.bugzilla.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will parse bugzilla links and present the channel with the title, status, and other information about the bug.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :weather, "Enable weather querying", :class => 'control-label' %></td>
        <td><%= select_tag :weather, options_for_select([["True", true],["False", false]], @bot.bot_config.weather.to_s), :class => 'form-control' %></td>
        <td>If set to true, the bot will respond to the weather parameter with the current weather for the specified (or default) zip code.<br>  Default: True.</td> 
    </tr>
    <tr>
        <td><%= label_tag :default_weather_zip, "Weather zip code", :class => 'control-label' %></td>
        <td><%= text_field_tag :default_weather_zip, @bot.bot_config(true).default_weather_zip, :class => 'form-control' %></td>
        <td>The default zip code to use if no zip code is specified for weather reporting.<br>  Default: 27606</td> 
    </tr>
  </tbody>
</table>
<div class="col-sm-offset-0">
  <%= submit_tag "Submit Configuration", :class => "btn btn-default" %>
</div>
<% end %>
<div class="col-sm-offset-11">
  <%= link_to "Back", bot_path(@bot.id), :class => "btn btn-default" %>
</div>

